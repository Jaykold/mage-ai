@use '../../../base/borders';
@use '../../../base/grid';
@use './mixins' as *;

$enter-duration: 3s;

.blockNode {
  @include borders.border-colors();

  height: inherit;
  padding: var(--padding-base);
}
.showOnHoverContainer {
  &:hover {
    .showOnHover {
      visibility: visible;
    }
  }

  .showOnHover {
    visibility: hidden;
  }
}

.blockNodeWrapper {
  &.loading {
    .loader {
      visibility: visible;
      opacity: 1;
    }
  }

  &.executing {
    .display-if-executing {
      display: block;
    }

    .display-ifnot-executing {
      display: none;
    }
  }

  .display-if-executing {
    display: none;
  }

  .display-ifnot-executing {
    display: block;
  }

  .loader {
    visibility: hidden;
    opacity: 0;
    position: relative;
    height: 2px;
    margin-top: 4px;
    margin-bottom: 2px;
    width: 100%;
  }
}

.dragWrapper {
  z-index: 3;

  &.output {
    z-index: 6;
  }

  &.app {
    z-index: 5;
  }

  &.groupSelection {
    z-index: 2;
  }

  .groupSelection {
    height: inherit;
  }
}

.resizeHandle {
  background-color: var(--borders-color-base-default);
  border-radius: 8px;
  opacity: 0;
  position: absolute;
  z-index: 6;

  &.bottom {
    bottom: 0;
    cursor: ns-resize;
    height: 16px;
    left: 0;
    margin-bottom: -8px;
    right: 0;
    width: 100%;
  }

  &.right {
    bottom: 0;
    cursor: ew-resize;
    height: 100%;
    margin-right: -8px;
    right: 0;
    top: 0;
    width: 16px;
  }
}

.appendedChildElement {
  height: inherit;
  width: inherit;
}
