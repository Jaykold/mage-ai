@use '../../../abstracts/variables' as *;
@use '../../../base/borders';
@use '../../../base/grid';
@use './mixins' as *;

$enter-duration: 3s;

.blockNode {
  @include borders.border-colors();

  height: inherit;
  padding: var(--padding-base);
}
.showOnHoverContainer {
  &:hover {
    .showOnHover {
      visibility: visible;
    }
  }

  .showOnHover {
    visibility: hidden;
  }
}

.blockNodeWrapper {
  &.loading {
    .loader {
      visibility: visible;
      opacity: 1;
    }
  }

  &.executing {
    .display-if-executing {
      display: block;
    }

    .display-ifnot-executing {
      display: none;
    }
  }

  .display-if-executing {
    display: none;
  }

  .display-ifnot-executing {
    display: block;
  }

  .loader {
    visibility: hidden;
    opacity: 0;
    position: relative;
    height: 2px;
    margin-top: 4px;
    margin-bottom: 2px;
    width: 100%;
  }
}

.dragWrapper {
  z-index: 3;

  &.output {
    z-index: 6;
  }

  &.app {
    z-index: 5;
  }

  &.groupSelection {
    z-index: 2;
  }

  .groupSelection {
    height: inherit;
  }
}

.resizeHandle {
  background-color: var(--borders-color-base-default);
  border-radius: 8px;
  opacity: 0;
  position: absolute;
  z-index: 6;

  &.bottom {
    bottom: 0;
    cursor: ns-resize;
    height: 16px;
    left: 0;
    margin-bottom: -8px;
    right: 0;
    width: 100%;
  }

  &.right {
    bottom: 0;
    cursor: ew-resize;
    height: 100%;
    margin-right: -8px;
    right: 0;
    top: 0;
    width: 16px;
  }
}

.inheritDimensions {
  height: inherit;
  width: inherit;
}

.outputContainerHeader,
.outputContainer {
  backdrop-filter: blur(#{$modal-blur-base});
  background: var(--modal-background-color-base);
  border-color: var(--borders-color-base-default);
  border-left-width: var(--borders-width);
  border-right-width: var(--borders-width);
  border-style: var(--borders-style);
}

.outputContainerHeader {
  border-top-left-radius: var(--borders-radius-md);
  border-top-right-radius: var(--borders-radius-md);
  border-top-width: var(--borders-width);
  border-bottom: var(--borders-width) var(--borders-style) var(--colors-graylo);
  position: absolute;
  transform: translateY(-100%);
  width: 100%;

  &:hover {
    cursor: move;
  }
}

.outputContainer {
  @include borders.border-colors();

  border-bottom-left-radius: var(--borders-radius-md);
  border-bottom-right-radius: var(--borders-radius-md);
  border-bottom-width: var(--borders-width);
  box-shadow: 8px 8px 4px 8px var(--modal-box-shadow-base);
  overflow: hidden;

  .fadeOut {
    opacity: 0;
    transition: opacity 0.3s ease-out;
  }
}

.outputScrollContainer {
  // Border widths
  max-height: calc(100% - 2px);
  overflow: auto;
  width: 100%;
}
